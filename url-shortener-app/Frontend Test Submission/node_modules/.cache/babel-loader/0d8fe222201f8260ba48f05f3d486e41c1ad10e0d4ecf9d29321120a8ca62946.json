{"ast":null,"code":"var _jsxFileName = \"/Users/navneetkumar/Desktop/Agiledgewebsite/internshipassignment/internassign/2200910100109/url-shortener-app/Frontend Test Submission/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [credentials, setCredentials] = useState(JSON.parse(localStorage.getItem('credentials') || 'null'));\n  const [loading, setLoading] = useState(true);\n\n  // Auto-login with predefined credentials\n  useEffect(() => {\n    const autoLogin = async () => {\n      if (token && credentials) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(credentials);\n        setLoading(false);\n      } else {\n        // Auto-register and login with predefined details\n        try {\n          const userData = {\n            email: 'navneetkumar1800242@gmail.com',\n            name: 'Navneet Kumar',\n            mobileNo: '9027978260',\n            githubUsername: 'navneetnavs',\n            rollNo: '2200910100109',\n            accessCode: 'NWtBu'\n          };\n          console.log('Starting auto-registration...');\n          await register(userData);\n        } catch (error) {\n          console.error('Auto-login failed:', error);\n          setLoading(false);\n        }\n      }\n    };\n    autoLogin();\n  }, []);\n  const register = async userData => {\n    try {\n      console.log('Registering user with data:', userData);\n\n      // Step 1: Register to get clientID and clientSecret\n      const registerResponse = await axios.post('http://localhost:5002/api/auth/register', userData);\n      const userCredentials = registerResponse.data;\n      console.log('Registration successful:', userCredentials);\n\n      // Step 2: Authenticate to get access token\n      const authData = {\n        email: userCredentials.email,\n        name: userCredentials.name,\n        mobileNo: userCredentials.mobileNo,\n        githubUsername: userCredentials.githubUsername,\n        rollNo: userCredentials.rollNo,\n        accessCode: userCredentials.accessCode,\n        clientID: userCredentials.clientID,\n        clientSecret: userCredentials.clientSecret\n      };\n      console.log('Authenticating with:', authData);\n      const authResponse = await axios.post('http://localhost:5002/api/auth/auth', authData);\n      const {\n        access_token\n      } = authResponse.data;\n      console.log('Authentication successful, token received');\n\n      // Store credentials and token\n      localStorage.setItem('credentials', JSON.stringify(userCredentials));\n      localStorage.setItem('token', access_token);\n\n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n\n      // Update state\n      setCredentials(userCredentials);\n      setToken(access_token);\n      setUser(userCredentials);\n      setLoading(false);\n      console.log('Auto-login completed successfully');\n    } catch (error) {\n      var _error$response;\n      console.error('Registration/Authentication error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setLoading(false);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setCredentials(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('credentials');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    token,\n    credentials,\n    loading,\n    isAuthenticated: !!token && !!user,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"odqkuiCjUSqGkMPOxZ0AJCW+vrE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","credentials","setCredentials","JSON","parse","loading","setLoading","autoLogin","defaults","headers","common","userData","email","name","mobileNo","githubUsername","rollNo","accessCode","console","log","register","error","registerResponse","post","userCredentials","data","authData","clientID","clientSecret","authResponse","access_token","setItem","stringify","_error$response","response","message","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/navneetkumar/Desktop/Agiledgewebsite/internshipassignment/internassign/2200910100109/url-shortener-app/Frontend Test Submission/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [credentials, setCredentials] = useState(JSON.parse(localStorage.getItem('credentials') || 'null'));\n  const [loading, setLoading] = useState(true);\n\n  // Auto-login with predefined credentials\n  useEffect(() => {\n    const autoLogin = async () => {\n      if (token && credentials) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(credentials);\n        setLoading(false);\n      } else {\n        // Auto-register and login with predefined details\n        try {\n          const userData = {\n            email: 'navneetkumar1800242@gmail.com',\n            name: 'Navneet Kumar',\n            mobileNo: '9027978260',\n            githubUsername: 'navneetnavs',\n            rollNo: '2200910100109',\n            accessCode: 'NWtBu'\n          };\n          \n          console.log('Starting auto-registration...');\n          await register(userData);\n        } catch (error) {\n          console.error('Auto-login failed:', error);\n          setLoading(false);\n        }\n      }\n    };\n    \n    autoLogin();\n  }, []);\n\n  const register = async (userData) => {\n    try {\n      console.log('Registering user with data:', userData);\n      \n      // Step 1: Register to get clientID and clientSecret\n      const registerResponse = await axios.post('http://localhost:5002/api/auth/register', userData);\n      const userCredentials = registerResponse.data;\n      console.log('Registration successful:', userCredentials);\n      \n      // Step 2: Authenticate to get access token\n      const authData = {\n        email: userCredentials.email,\n        name: userCredentials.name,\n        mobileNo: userCredentials.mobileNo,\n        githubUsername: userCredentials.githubUsername,\n        rollNo: userCredentials.rollNo,\n        accessCode: userCredentials.accessCode,\n        clientID: userCredentials.clientID,\n        clientSecret: userCredentials.clientSecret\n      };\n      \n      console.log('Authenticating with:', authData);\n      const authResponse = await axios.post('http://localhost:5002/api/auth/auth', authData);\n      const { access_token } = authResponse.data;\n      console.log('Authentication successful, token received');\n      \n      // Store credentials and token\n      localStorage.setItem('credentials', JSON.stringify(userCredentials));\n      localStorage.setItem('token', access_token);\n      \n      // Set axios default header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      // Update state\n      setCredentials(userCredentials);\n      setToken(access_token);\n      setUser(userCredentials);\n      setLoading(false);\n      \n      console.log('Auto-login completed successfully');\n      \n    } catch (error) {\n      console.error('Registration/Authentication error:', error.response?.data || error.message);\n      setLoading(false);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setCredentials(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('credentials');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  const value = {\n    user,\n    token,\n    credentials,\n    loading,\n    isAuthenticated: !!token && !!user,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}