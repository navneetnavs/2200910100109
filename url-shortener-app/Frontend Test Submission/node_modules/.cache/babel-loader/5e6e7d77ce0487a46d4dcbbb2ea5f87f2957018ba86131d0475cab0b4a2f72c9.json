{"ast":null,"code":"var _jsxFileName = \"/Users/navneetkumar/Desktop/Agiledgewebsite/internshipassignment/internassign/2200910100109/url-shortener-app/Frontend Test Submission/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [credentials, setCredentials] = useState(JSON.parse(localStorage.getItem('credentials') || 'null'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token && credentials) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(credentials);\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  }, [token, credentials]);\n  const register = async userData => {\n    try {\n      // Step 1: Register to get clientID and clientSecret\n      const registerResponse = await axios.post('/api/auth/register', userData);\n      const userCredentials = registerResponse.data;\n\n      // Step 2: Authenticate to get access token\n      const authData = {\n        email: userCredentials.email,\n        name: userCredentials.name,\n        rollNo: userCredentials.rollNo,\n        accessCode: userCredentials.accessCode,\n        clientID: userCredentials.clientID,\n        clientSecret: userCredentials.clientSecret\n      };\n      const authResponse = await axios.post('/api/auth/auth', authData);\n      const {\n        access_token\n      } = authResponse.data;\n\n      // Store everything\n      setToken(access_token);\n      setCredentials(userCredentials);\n      setUser(userCredentials);\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('credentials', JSON.stringify(userCredentials));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      return userCredentials;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setCredentials(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('credentials');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    token,\n    credentials,\n    loading,\n    isAuthenticated: !!token && !!user,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"odqkuiCjUSqGkMPOxZ0AJCW+vrE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","credentials","setCredentials","JSON","parse","loading","setLoading","defaults","headers","common","register","userData","registerResponse","post","userCredentials","data","authData","email","name","rollNo","accessCode","clientID","clientSecret","authResponse","access_token","setItem","stringify","error","_error$response","response","message","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/navneetkumar/Desktop/Agiledgewebsite/internshipassignment/internassign/2200910100109/url-shortener-app/Frontend Test Submission/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [credentials, setCredentials] = useState(JSON.parse(localStorage.getItem('credentials') || 'null'));\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (token && credentials) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(credentials);\n      setLoading(false);\n    } else {\n      setLoading(false);\n    }\n  }, [token, credentials]);\n\n  const register = async (userData) => {\n    try {\n      // Step 1: Register to get clientID and clientSecret\n      const registerResponse = await axios.post('/api/auth/register', userData);\n      const userCredentials = registerResponse.data;\n      \n      // Step 2: Authenticate to get access token\n      const authData = {\n        email: userCredentials.email,\n        name: userCredentials.name,\n        rollNo: userCredentials.rollNo,\n        accessCode: userCredentials.accessCode,\n        clientID: userCredentials.clientID,\n        clientSecret: userCredentials.clientSecret\n      };\n      \n      const authResponse = await axios.post('/api/auth/auth', authData);\n      const { access_token } = authResponse.data;\n      \n      // Store everything\n      setToken(access_token);\n      setCredentials(userCredentials);\n      setUser(userCredentials);\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('credentials', JSON.stringify(userCredentials));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      return userCredentials;\n    } catch (error) {\n      throw error.response?.data || { message: 'Registration failed' };\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    setCredentials(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('credentials');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  const value = {\n    user,\n    token,\n    credentials,\n    loading,\n    isAuthenticated: !!token && !!user,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}